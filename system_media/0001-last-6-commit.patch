From d33e9de94cacf35292d096c16543d02ce5ded14f Mon Sep 17 00:00:00 2001
From: maxwen <max.weninger@gmail.com>
Date: Thu, 22 Oct 2015 00:11:33 +0200
Subject: [PATCH 1/6] media: CAF bringup

Change-Id: I59201e9a8373f1c78d6c926e00e761b667ea2d5d
---
 audio/include/system/audio.h | 153 ++++++++++++++++++++++++++++++++++++++++++-
 audio_route/audio_route.c    |   8 ++-
 audio_utils/format.c         |  28 ++++++++
 3 files changed, 187 insertions(+), 2 deletions(-)

diff --git a/audio/include/system/audio.h b/audio/include/system/audio.h
index b81b379..9551311 100644
--- a/audio/include/system/audio.h
+++ b/audio/include/system/audio.h
@@ -49,6 +49,7 @@ __BEGIN_DECLS
 #define AUDIO_REMOTE_SUBMIX_DEVICE_ADDRESS "0"
 
 /* AudioFlinger and AudioPolicy services use I/O handles to identify audio sources and sinks */
+
 typedef int audio_io_handle_t;
 #define AUDIO_IO_HANDLE_NONE    0
 
@@ -318,6 +319,23 @@ typedef enum {
     AUDIO_FORMAT_IEC61937            = 0x0D000000UL,
     AUDIO_FORMAT_DOLBY_TRUEHD        = 0x0E000000UL,
     AUDIO_FORMAT_MAIN_MASK           = 0xFF000000UL, /* Deprecated. Use audio_get_main_format() */
+#ifdef QCOM_HARDWARE
+    AUDIO_FORMAT_EVRC                = 0x10000000UL,
+    AUDIO_FORMAT_QCELP               = 0x11000000UL,
+    AUDIO_FORMAT_WMA                 = 0x12000000UL,
+    AUDIO_FORMAT_WMA_PRO             = 0x13000000UL,
+    AUDIO_FORMAT_AAC_ADIF            = 0x14000000UL,
+    AUDIO_FORMAT_EVRCB               = 0x15000000UL,
+    AUDIO_FORMAT_EVRCWB              = 0x16000000UL,
+    AUDIO_FORMAT_AMR_WB_PLUS         = 0x17000000UL,
+    AUDIO_FORMAT_MP2                 = 0x18000000UL,
+    AUDIO_FORMAT_EVRCNW              = 0x19000000UL,
+    AUDIO_FORMAT_PCM_OFFLOAD         = 0x1A000000UL,
+    AUDIO_FORMAT_FLAC                = 0x1B000000UL,
+    AUDIO_FORMAT_ALAC                = 0x1C000000UL,
+    AUDIO_FORMAT_APE                 = 0x1D000000UL,
+    AUDIO_FORMAT_AAC_ADTS            = 0x1E000000UL,
+#endif
     AUDIO_FORMAT_SUB_MASK            = 0x00FFFFFFUL,
 
     /* Aliases */
@@ -355,6 +373,33 @@ typedef enum {
                                         AUDIO_FORMAT_AAC_SUB_HE_V2),
     AUDIO_FORMAT_AAC_ELD             = (AUDIO_FORMAT_AAC |
                                         AUDIO_FORMAT_AAC_SUB_ELD),
+#ifdef QCOM_HARDWARE
+    AUDIO_FORMAT_AAC_ADTS_MAIN       = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_MAIN),
+    AUDIO_FORMAT_AAC_ADTS_LC         = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_LC),
+    AUDIO_FORMAT_AAC_ADTS_SSR        = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_SSR),
+    AUDIO_FORMAT_AAC_ADTS_LTP        = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_LTP),
+    AUDIO_FORMAT_AAC_ADTS_HE_V1      = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_HE_V1),
+    AUDIO_FORMAT_AAC_ADTS_SCALABLE   = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_SCALABLE),
+    AUDIO_FORMAT_AAC_ADTS_ERLC       = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_ERLC),
+    AUDIO_FORMAT_AAC_ADTS_LD         = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_LD),
+    AUDIO_FORMAT_AAC_ADTS_HE_V2      = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_HE_V2),
+    AUDIO_FORMAT_AAC_ADTS_ELD        = (AUDIO_FORMAT_AAC_ADTS |
+                                        AUDIO_FORMAT_AAC_SUB_ELD),
+    /*Offload PCM formats*/
+    AUDIO_FORMAT_PCM_16_BIT_OFFLOAD  = (AUDIO_FORMAT_PCM_OFFLOAD |
+                                        AUDIO_FORMAT_PCM_SUB_16_BIT),
+    AUDIO_FORMAT_PCM_24_BIT_OFFLOAD  = (AUDIO_FORMAT_PCM_OFFLOAD |
+                                        AUDIO_FORMAT_PCM_SUB_8_24_BIT),
+#endif
 } audio_format_t;
 
 /* For the channel mask for position assignment representation */
@@ -395,6 +440,11 @@ enum {
     AUDIO_CHANNEL_OUT_MONO     = AUDIO_CHANNEL_OUT_FRONT_LEFT,
     AUDIO_CHANNEL_OUT_STEREO   = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
                                   AUDIO_CHANNEL_OUT_FRONT_RIGHT),
+#ifdef QCOM_HARDWARE
+    AUDIO_CHANNEL_OUT_2POINT1  = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
+                                  AUDIO_CHANNEL_OUT_FRONT_RIGHT |
+                                  AUDIO_CHANNEL_OUT_FRONT_CENTER),
+#endif
     AUDIO_CHANNEL_OUT_QUAD     = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
                                   AUDIO_CHANNEL_OUT_FRONT_RIGHT |
                                   AUDIO_CHANNEL_OUT_BACK_LEFT |
@@ -405,6 +455,14 @@ enum {
                                   AUDIO_CHANNEL_OUT_FRONT_RIGHT |
                                   AUDIO_CHANNEL_OUT_SIDE_LEFT |
                                   AUDIO_CHANNEL_OUT_SIDE_RIGHT),
+#ifdef QCOM_HARDWARE
+    AUDIO_CHANNEL_OUT_SURROUND = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
+                                  AUDIO_CHANNEL_OUT_FRONT_RIGHT |
+                                  AUDIO_CHANNEL_OUT_FRONT_CENTER |
+                                  AUDIO_CHANNEL_OUT_BACK_CENTER),
+    AUDIO_CHANNEL_OUT_PENTA =    (AUDIO_CHANNEL_OUT_QUAD |
+                                  AUDIO_CHANNEL_OUT_FRONT_CENTER),
+#endif
     AUDIO_CHANNEL_OUT_5POINT1  = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
                                   AUDIO_CHANNEL_OUT_FRONT_RIGHT |
                                   AUDIO_CHANNEL_OUT_FRONT_CENTER |
@@ -419,6 +477,15 @@ enum {
                                   AUDIO_CHANNEL_OUT_LOW_FREQUENCY |
                                   AUDIO_CHANNEL_OUT_SIDE_LEFT |
                                   AUDIO_CHANNEL_OUT_SIDE_RIGHT),
+#ifdef QCOM_HARDWARE
+    AUDIO_CHANNEL_OUT_6POINT1  = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
+                                  AUDIO_CHANNEL_OUT_FRONT_RIGHT |
+                                  AUDIO_CHANNEL_OUT_FRONT_CENTER |
+                                  AUDIO_CHANNEL_OUT_LOW_FREQUENCY |
+                                  AUDIO_CHANNEL_OUT_BACK_LEFT |
+                                  AUDIO_CHANNEL_OUT_BACK_RIGHT |
+                                  AUDIO_CHANNEL_OUT_BACK_CENTER),
+#endif
     // matches the correct AudioFormat.CHANNEL_OUT_7POINT1_SURROUND definition for 7.1
     AUDIO_CHANNEL_OUT_7POINT1  = (AUDIO_CHANNEL_OUT_FRONT_LEFT |
                                   AUDIO_CHANNEL_OUT_FRONT_RIGHT |
@@ -470,6 +537,17 @@ enum {
     AUDIO_CHANNEL_IN_MONO   = AUDIO_CHANNEL_IN_FRONT,
     AUDIO_CHANNEL_IN_STEREO = (AUDIO_CHANNEL_IN_LEFT | AUDIO_CHANNEL_IN_RIGHT),
     AUDIO_CHANNEL_IN_FRONT_BACK = (AUDIO_CHANNEL_IN_FRONT | AUDIO_CHANNEL_IN_BACK),
+#ifdef QCOM_HARDWARE
+    AUDIO_CHANNEL_IN_5POINT1 = (AUDIO_CHANNEL_IN_LEFT |
+                               AUDIO_CHANNEL_IN_RIGHT |
+                               AUDIO_CHANNEL_IN_FRONT |
+                               AUDIO_CHANNEL_IN_BACK |
+                               AUDIO_CHANNEL_IN_LEFT_PROCESSED |
+                               AUDIO_CHANNEL_IN_RIGHT_PROCESSED),
+    AUDIO_CHANNEL_IN_VOICE_UPLINK_MONO = (AUDIO_CHANNEL_IN_VOICE_UPLINK | AUDIO_CHANNEL_IN_MONO),
+    AUDIO_CHANNEL_IN_VOICE_DNLINK_MONO = (AUDIO_CHANNEL_IN_VOICE_DNLINK | AUDIO_CHANNEL_IN_MONO),
+    AUDIO_CHANNEL_IN_VOICE_CALL_MONO   = (AUDIO_CHANNEL_IN_VOICE_UPLINK_MONO | AUDIO_CHANNEL_IN_VOICE_DNLINK_MONO),
+#endif
     AUDIO_CHANNEL_IN_ALL    = (AUDIO_CHANNEL_IN_LEFT |
                                AUDIO_CHANNEL_IN_RIGHT |
                                AUDIO_CHANNEL_IN_FRONT |
@@ -671,8 +749,14 @@ enum {
     /* limited-output speaker device for acoustic safety */
     AUDIO_DEVICE_OUT_SPEAKER_SAFE              = 0x400000,
     AUDIO_DEVICE_OUT_IP                        = 0x800000,
+<<<<<<< HEAD
     /* audio bus implemented by the audio system (e.g an MOST stereo channel) */
     AUDIO_DEVICE_OUT_BUS                       = 0x1000000,
+=======
+#ifdef QCOM_HARDWARE
+    AUDIO_DEVICE_OUT_PROXY                     = 0x1000000,
+#endif
+>>>>>>> c712e28... media: CAF bringup
     AUDIO_DEVICE_OUT_DEFAULT                   = AUDIO_DEVICE_BIT_DEFAULT,
     AUDIO_DEVICE_OUT_ALL      = (AUDIO_DEVICE_OUT_EARPIECE |
                                  AUDIO_DEVICE_OUT_SPEAKER |
@@ -698,7 +782,13 @@ enum {
                                  AUDIO_DEVICE_OUT_AUX_LINE |
                                  AUDIO_DEVICE_OUT_SPEAKER_SAFE |
                                  AUDIO_DEVICE_OUT_IP |
+<<<<<<< HEAD
                                  AUDIO_DEVICE_OUT_BUS |
+=======
+#ifdef QCOM_HARDWARE
+                                 AUDIO_DEVICE_OUT_PROXY |
+#endif
+>>>>>>> c712e28... media: CAF bringup
                                  AUDIO_DEVICE_OUT_DEFAULT),
     AUDIO_DEVICE_OUT_ALL_A2DP = (AUDIO_DEVICE_OUT_BLUETOOTH_A2DP |
                                  AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES |
@@ -736,8 +826,14 @@ enum {
     AUDIO_DEVICE_IN_BLUETOOTH_A2DP        = AUDIO_DEVICE_BIT_IN | 0x20000,
     AUDIO_DEVICE_IN_LOOPBACK              = AUDIO_DEVICE_BIT_IN | 0x40000,
     AUDIO_DEVICE_IN_IP                    = AUDIO_DEVICE_BIT_IN | 0x80000,
+<<<<<<< HEAD
     /* audio bus implemented by the audio system (e.g an MOST stereo channel) */
     AUDIO_DEVICE_IN_BUS                   = AUDIO_DEVICE_BIT_IN | 0x100000,
+=======
+#ifdef QCOM_HARDWARE
+    AUDIO_DEVICE_IN_PROXY                 = AUDIO_DEVICE_BIT_IN | 0x1000000,
+#endif
+>>>>>>> c712e28... media: CAF bringup
     AUDIO_DEVICE_IN_DEFAULT               = AUDIO_DEVICE_BIT_IN | AUDIO_DEVICE_BIT_DEFAULT,
 
     AUDIO_DEVICE_IN_ALL     = (AUDIO_DEVICE_IN_COMMUNICATION |
@@ -759,6 +855,9 @@ enum {
                                AUDIO_DEVICE_IN_SPDIF |
                                AUDIO_DEVICE_IN_BLUETOOTH_A2DP |
                                AUDIO_DEVICE_IN_LOOPBACK |
+#ifdef QCOM_HARDWARE 
+                               AUDIO_DEVICE_IN_PROXY |
+#endif
                                AUDIO_DEVICE_IN_IP |
                                AUDIO_DEVICE_IN_BUS |
                                AUDIO_DEVICE_IN_DEFAULT),
@@ -802,6 +901,12 @@ typedef enum {
 
     AUDIO_OUTPUT_FLAG_IEC958_NONAUDIO = 0x400, // Audio stream contains compressed audio in
                                                // SPDIF data bursts, not PCM.
+#ifdef QCOM_HARDWARE
+    AUDIO_OUTPUT_FLAG_VOIP_RX = 0x800,  // use this flag in combination with DIRECT to
+                                         // start voip over voice path.
+    AUDIO_OUTPUT_FLAG_COMPRESS_PASSTHROUGH = 0x1000, // flag for HDMI compressed passthrough
+    AUDIO_OUTPUT_FLAG_DIRECT_PCM = 0x2000, // flag for Direct PCM
+#endif
 } audio_output_flags_t;
 
 /* The audio input flags are analogous to audio output flags.
@@ -834,6 +939,11 @@ typedef struct {
     int64_t duration_us;                // duration in microseconds, -1 if unknown
     bool has_video;                     // true if stream is tied to a video stream
     bool is_streaming;                  // true if streaming, false if local playback
+#ifdef QCOM_HARDWARE
+    uint32_t bit_width;
+    uint32_t offload_buffer_size;       // offload fragment size
+    audio_usage_t usage;
+#endif
 } audio_offload_info_t;
 
 #define AUDIO_MAKE_OFFLOAD_INFO_VERSION(maj,min) \
@@ -852,7 +962,12 @@ static const audio_offload_info_t AUDIO_INFO_INITIALIZER = {
     bit_rate: 0,
     duration_us: 0,
     has_video: false,
-    is_streaming: false
+    is_streaming: false,
+#ifdef QCOM_HARDWARE
+    bit_width: 16,
+    offload_buffer_size: 0,
+    usage: AUDIO_USAGE_UNKNOWN,
+#endif
 };
 
 /* common audio stream configuration parameters
@@ -1434,6 +1549,9 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_AMR_NB:
     case AUDIO_FORMAT_AMR_WB:
     case AUDIO_FORMAT_AAC:
+#ifdef QCOM_HARDWARE
+    case AUDIO_FORMAT_AAC_ADTS:
+#endif
     case AUDIO_FORMAT_HE_AAC_V1:
     case AUDIO_FORMAT_HE_AAC_V2:
     case AUDIO_FORMAT_VORBIS:
@@ -1442,9 +1560,33 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_E_AC3:
     case AUDIO_FORMAT_DTS:
     case AUDIO_FORMAT_DTS_HD:
+<<<<<<< HEAD
     case AUDIO_FORMAT_IEC61937:
     case AUDIO_FORMAT_DOLBY_TRUEHD:
+=======
+#ifdef QCOM_HARDWARE
+    case AUDIO_FORMAT_QCELP:
+    case AUDIO_FORMAT_EVRC:
+    case AUDIO_FORMAT_EVRCB:
+    case AUDIO_FORMAT_EVRCWB:
+    case AUDIO_FORMAT_AAC_ADIF:
+    case AUDIO_FORMAT_AMR_WB_PLUS:
+    case AUDIO_FORMAT_MP2:
+    case AUDIO_FORMAT_EVRCNW:
+    case AUDIO_FORMAT_FLAC:
+    case AUDIO_FORMAT_ALAC:
+    case AUDIO_FORMAT_APE:
+    case AUDIO_FORMAT_WMA:
+    case AUDIO_FORMAT_WMA_PRO:
+        return true;
+    case AUDIO_FORMAT_PCM_OFFLOAD:
+        if (format != AUDIO_FORMAT_PCM_16_BIT_OFFLOAD &&
+                format != AUDIO_FORMAT_PCM_24_BIT_OFFLOAD) {
+            return false;
+        }
+>>>>>>> c712e28... media: CAF bringup
         return true;
+#endif
     default:
         return false;
     }
@@ -1490,13 +1632,22 @@ static inline size_t audio_bytes_per_sample(audio_format_t format)
     switch (format) {
     case AUDIO_FORMAT_PCM_32_BIT:
     case AUDIO_FORMAT_PCM_8_24_BIT:
+#ifdef QCOM_HARDWARE
+    case AUDIO_FORMAT_PCM_24_BIT_OFFLOAD:
+#endif
         size = sizeof(int32_t);
         break;
     case AUDIO_FORMAT_PCM_24_BIT_PACKED:
         size = sizeof(uint8_t) * 3;
         break;
     case AUDIO_FORMAT_PCM_16_BIT:
+<<<<<<< HEAD
     case AUDIO_FORMAT_IEC61937:
+=======
+#ifdef QCOM_HARDWARE
+    case AUDIO_FORMAT_PCM_16_BIT_OFFLOAD:
+#endif
+>>>>>>> c712e28... media: CAF bringup
         size = sizeof(int16_t);
         break;
     case AUDIO_FORMAT_PCM_8_BIT:
diff --git a/audio_route/audio_route.c b/audio_route/audio_route.c
index bd5c112..43356ff 100644
--- a/audio_route/audio_route.c
+++ b/audio_route/audio_route.c
@@ -589,8 +589,14 @@ static int alloc_mixer_state(struct audio_route *ar)
         /* Skip unsupported types that are not supported yet in XML */
         type = mixer_ctl_get_type(ctl);
 
-        if (!is_supported_ctl_type(type))
+        if (!is_supported_ctl_type(type)) {
+#ifdef QCOM_HARDWARE
+            ar->mixer_state[i].old_value = NULL;
+            ar->mixer_state[i].new_value = NULL;
+            ar->mixer_state[i].reset_value = NULL;
+#endif
             continue;
+        }
 
         size_t value_sz = sizeof_ctl_type(type);
         ar->mixer_state[i].old_value.ptr = calloc(num_values, value_sz);
diff --git a/audio_utils/format.c b/audio_utils/format.c
index 3eda484..f277489 100644
--- a/audio_utils/format.c
+++ b/audio_utils/format.c
@@ -143,6 +143,34 @@ void memcpy_by_audio_format(void *dst, audio_format_t dst_format,
             break;
         }
         break;
+#ifdef QCOM_HARDWARE
+    case AUDIO_FORMAT_PCM_24_BIT_OFFLOAD: {
+        // pcm 24 bit with padding at LSB
+        // can assume LE?
+        size_t i;
+        uint8_t * src_ptr = (uint8_t *)src;
+        int32_t * dst_ptr = (int32_t *)dst;
+        switch (src_format) {
+        case AUDIO_FORMAT_PCM_24_BIT_PACKED: {
+            for (i = 0; i < count; i++) {
+                *dst_ptr++ = (int8_t)src_ptr[2] << 24 | src_ptr[1] << 16 | src_ptr[0] << 8;
+                src_ptr += 3;
+            }
+            return;
+        }
+        case AUDIO_FORMAT_PCM_8_24_BIT: { // padding is at MSB
+            for (i = 0; i < count; i++) {
+                *dst_ptr++ = (int8_t)src_ptr[2] << 24 | src_ptr[1] << 16 | src_ptr[0] << 8;
+                src_ptr += 4;
+            }
+            return;
+        }
+        default:
+            break;
+        }
+        break;
+    }
+#endif
     default:
         break;
     }
-- 
2.7.4


From cd6cad629ad076b7b49c6d7ffb688ee1632fc2f0 Mon Sep 17 00:00:00 2001
From: maxwen <max.weninger@gmail.com>
Date: Sun, 18 Sep 2016 00:37:32 +0200
Subject: [PATCH 2/6] media: remove QCOM_HARDWARE section

Change-Id: Ib70dea29e687b74282efdbd6535ad58a009d699d
---
 audio_route/audio_route.c | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/audio_route/audio_route.c b/audio_route/audio_route.c
index 43356ff..84fe0c6 100644
--- a/audio_route/audio_route.c
+++ b/audio_route/audio_route.c
@@ -590,11 +590,6 @@ static int alloc_mixer_state(struct audio_route *ar)
         type = mixer_ctl_get_type(ctl);
 
         if (!is_supported_ctl_type(type)) {
-#ifdef QCOM_HARDWARE
-            ar->mixer_state[i].old_value = NULL;
-            ar->mixer_state[i].new_value = NULL;
-            ar->mixer_state[i].reset_value = NULL;
-#endif
             continue;
         }
 
-- 
2.7.4


From ad8711200cd6dca4bcdd000c34ec967eb287e77b Mon Sep 17 00:00:00 2001
From: sooorajjj <sooraj.sizon@micromaxinfo.com>
Date: Wed, 1 Feb 2017 10:09:39 +0530
Subject: [PATCH 3/6] Fix Derp!

---
 audio/include/system/audio.h | 15 ---------------
 1 file changed, 15 deletions(-)

diff --git a/audio/include/system/audio.h b/audio/include/system/audio.h
index 9551311..b091b4c 100644
--- a/audio/include/system/audio.h
+++ b/audio/include/system/audio.h
@@ -749,14 +749,11 @@ enum {
     /* limited-output speaker device for acoustic safety */
     AUDIO_DEVICE_OUT_SPEAKER_SAFE              = 0x400000,
     AUDIO_DEVICE_OUT_IP                        = 0x800000,
-<<<<<<< HEAD
     /* audio bus implemented by the audio system (e.g an MOST stereo channel) */
     AUDIO_DEVICE_OUT_BUS                       = 0x1000000,
-=======
 #ifdef QCOM_HARDWARE
     AUDIO_DEVICE_OUT_PROXY                     = 0x1000000,
 #endif
->>>>>>> c712e28... media: CAF bringup
     AUDIO_DEVICE_OUT_DEFAULT                   = AUDIO_DEVICE_BIT_DEFAULT,
     AUDIO_DEVICE_OUT_ALL      = (AUDIO_DEVICE_OUT_EARPIECE |
                                  AUDIO_DEVICE_OUT_SPEAKER |
@@ -782,13 +779,10 @@ enum {
                                  AUDIO_DEVICE_OUT_AUX_LINE |
                                  AUDIO_DEVICE_OUT_SPEAKER_SAFE |
                                  AUDIO_DEVICE_OUT_IP |
-<<<<<<< HEAD
                                  AUDIO_DEVICE_OUT_BUS |
-=======
 #ifdef QCOM_HARDWARE
                                  AUDIO_DEVICE_OUT_PROXY |
 #endif
->>>>>>> c712e28... media: CAF bringup
                                  AUDIO_DEVICE_OUT_DEFAULT),
     AUDIO_DEVICE_OUT_ALL_A2DP = (AUDIO_DEVICE_OUT_BLUETOOTH_A2DP |
                                  AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES |
@@ -826,14 +820,11 @@ enum {
     AUDIO_DEVICE_IN_BLUETOOTH_A2DP        = AUDIO_DEVICE_BIT_IN | 0x20000,
     AUDIO_DEVICE_IN_LOOPBACK              = AUDIO_DEVICE_BIT_IN | 0x40000,
     AUDIO_DEVICE_IN_IP                    = AUDIO_DEVICE_BIT_IN | 0x80000,
-<<<<<<< HEAD
     /* audio bus implemented by the audio system (e.g an MOST stereo channel) */
     AUDIO_DEVICE_IN_BUS                   = AUDIO_DEVICE_BIT_IN | 0x100000,
-=======
 #ifdef QCOM_HARDWARE
     AUDIO_DEVICE_IN_PROXY                 = AUDIO_DEVICE_BIT_IN | 0x1000000,
 #endif
->>>>>>> c712e28... media: CAF bringup
     AUDIO_DEVICE_IN_DEFAULT               = AUDIO_DEVICE_BIT_IN | AUDIO_DEVICE_BIT_DEFAULT,
 
     AUDIO_DEVICE_IN_ALL     = (AUDIO_DEVICE_IN_COMMUNICATION |
@@ -1560,10 +1551,8 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_E_AC3:
     case AUDIO_FORMAT_DTS:
     case AUDIO_FORMAT_DTS_HD:
-<<<<<<< HEAD
     case AUDIO_FORMAT_IEC61937:
     case AUDIO_FORMAT_DOLBY_TRUEHD:
-=======
 #ifdef QCOM_HARDWARE
     case AUDIO_FORMAT_QCELP:
     case AUDIO_FORMAT_EVRC:
@@ -1584,7 +1573,6 @@ static inline bool audio_is_valid_format(audio_format_t format)
                 format != AUDIO_FORMAT_PCM_24_BIT_OFFLOAD) {
             return false;
         }
->>>>>>> c712e28... media: CAF bringup
         return true;
 #endif
     default:
@@ -1641,13 +1629,10 @@ static inline size_t audio_bytes_per_sample(audio_format_t format)
         size = sizeof(uint8_t) * 3;
         break;
     case AUDIO_FORMAT_PCM_16_BIT:
-<<<<<<< HEAD
     case AUDIO_FORMAT_IEC61937:
-=======
 #ifdef QCOM_HARDWARE
     case AUDIO_FORMAT_PCM_16_BIT_OFFLOAD:
 #endif
->>>>>>> c712e28... media: CAF bringup
         size = sizeof(int16_t);
         break;
     case AUDIO_FORMAT_PCM_8_BIT:
-- 
2.7.4


From eab8f70020fe7a6782c4004ef2cd06be5ab31314 Mon Sep 17 00:00:00 2001
From: Preetam Singh Ranawat <apranawat@codeaurora.org>
Date: Thu, 12 May 2016 16:09:47 +0530
Subject: [PATCH 4/6] audio: add DSD format to enum list.

-add DSD as a new format type to the format enum list and
 make it a valid audio format.

Change-Id: I40819512d9e09f5e7fdc3506f9f3516a1b037663
---
 audio/include/system/audio.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/audio/include/system/audio.h b/audio/include/system/audio.h
index b091b4c..5ceb787 100644
--- a/audio/include/system/audio.h
+++ b/audio/include/system/audio.h
@@ -335,6 +335,7 @@ typedef enum {
     AUDIO_FORMAT_ALAC                = 0x1C000000UL,
     AUDIO_FORMAT_APE                 = 0x1D000000UL,
     AUDIO_FORMAT_AAC_ADTS            = 0x1E000000UL,
+    AUDIO_FORMAT_DSD                 = 0x1F000000UL,
 #endif
     AUDIO_FORMAT_SUB_MASK            = 0x00FFFFFFUL,
 
@@ -1567,6 +1568,7 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_APE:
     case AUDIO_FORMAT_WMA:
     case AUDIO_FORMAT_WMA_PRO:
+    case AUDIO_FORMAT_DSD:
         return true;
     case AUDIO_FORMAT_PCM_OFFLOAD:
         if (format != AUDIO_FORMAT_PCM_16_BIT_OFFLOAD &&
-- 
2.7.4


From 9b67fee57d80b99465ed6ded31aab9aeb5710e23 Mon Sep 17 00:00:00 2001
From: Naresh Tanniru <ntanniru@codeaurora.org>
Date: Tue, 17 May 2016 21:32:45 +0530
Subject: [PATCH 5/6] audio: Add support for encoder configuration

- Add SBC , APTX encoders

- Add support for SBC, AAC, APTX encoder
  configuration

Change-Id: If126c6764cfd7a2e46cb7784ad899681de581b56
---
 audio/include/system/audio.h | 44 +++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 43 insertions(+), 1 deletion(-)

diff --git a/audio/include/system/audio.h b/audio/include/system/audio.h
index 5ceb787..f737961 100644
--- a/audio/include/system/audio.h
+++ b/audio/include/system/audio.h
@@ -318,7 +318,6 @@ typedef enum {
     // IEC61937 is encoded audio wrapped in 16-bit PCM.
     AUDIO_FORMAT_IEC61937            = 0x0D000000UL,
     AUDIO_FORMAT_DOLBY_TRUEHD        = 0x0E000000UL,
-    AUDIO_FORMAT_MAIN_MASK           = 0xFF000000UL, /* Deprecated. Use audio_get_main_format() */
 #ifdef QCOM_HARDWARE
     AUDIO_FORMAT_EVRC                = 0x10000000UL,
     AUDIO_FORMAT_QCELP               = 0x11000000UL,
@@ -336,7 +335,11 @@ typedef enum {
     AUDIO_FORMAT_APE                 = 0x1D000000UL,
     AUDIO_FORMAT_AAC_ADTS            = 0x1E000000UL,
     AUDIO_FORMAT_DSD                 = 0x1F000000UL,
+    AUDIO_FORMAT_SBC                 = 0x20000000UL,
+    AUDIO_FORMAT_APTX                = 0x21000000UL,
+    AUDIO_FORMAT_APTX_HD             = 0x22000000UL,
 #endif
+
     AUDIO_FORMAT_SUB_MASK            = 0x00FFFFFFUL,
 
     /* Aliases */
@@ -938,6 +941,45 @@ typedef struct {
 #endif
 } audio_offload_info_t;
 
+/* Information about BT SBC encoder configuration
+ * This data is used between audio HAL module and
+ * BT IPC library to configure DSP encoder
+ */
+typedef struct {
+    uint32_t subband;    /* 4, 8 */
+    uint32_t blk_len;    /* 4, 8, 12, 16 */
+    uint16_t sampling_rate; /*44.1khz,48khz*/
+    uint8_t  channels;      /*0(Mono),1(Dual_mono),2(Stereo),3(JS)*/
+    uint8_t  alloc;         /*0(Loudness),1(SNR)*/
+    uint8_t  min_bitpool;   /* 2 */
+    uint8_t  max_bitpool;   /*53(44.1khz),51 (48khz) */
+    uint32_t bitrate;      /* 320kbps to 512kbps */
+} audio_sbc_encoder_config;
+
+
+/* Information about BT APTX encoder configuration
+ * This data is used between audio HAL module and
+ * BT IPC library to configure DSP encoder
+ */
+typedef struct {
+    uint16_t sampling_rate;
+    uint8_t  channels;
+    uint32_t bitrate;
+} audio_aptx_encoder_config;
+
+
+/* Information about BT AAC encoder configuration
+ * This data is used between audio HAL module and
+ * BT IPC library to configure DSP encoder
+ */
+typedef struct {
+    uint32_t enc_mode; /* LC, SBR, PS */
+    uint16_t format_flag; /* RAW, ADTS */
+    uint16_t channels; /* 1-Mono, 2-Stereo */
+    uint32_t sampling_rate;
+    uint32_t bitrate;
+} audio_aac_encoder_config;
+
 #define AUDIO_MAKE_OFFLOAD_INFO_VERSION(maj,min) \
             ((((maj) & 0xff) << 8) | ((min) & 0xff))
 
-- 
2.7.4


From c1c6485faf6bd512eeabcb632623e3a3585d246b Mon Sep 17 00:00:00 2001
From: Steve Kondik <steve@cyngn.com>
Date: Fri, 16 Oct 2015 02:06:35 -0700
Subject: [PATCH 6/6] audio: Add helper method for PCM offload formats

Change-Id: Ie00a65ad1449c1838fd4335b7083351c59240e9c
---
 audio/include/system/audio.h | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/audio/include/system/audio.h b/audio/include/system/audio.h
index f737961..baa3481 100644
--- a/audio/include/system/audio.h
+++ b/audio/include/system/audio.h
@@ -1657,6 +1657,14 @@ static inline bool audio_has_proportional_frames(audio_format_t format)
             || mainFormat == AUDIO_FORMAT_IEC61937);
 }
 
+static inline bool audio_is_offload_pcm(audio_format_t format)
+{
+#ifdef QCOM_HARDWARE
+    return ((format & AUDIO_FORMAT_MAIN_MASK) == AUDIO_FORMAT_PCM_OFFLOAD);
+#endif
+    return false;
+}
+
 static inline size_t audio_bytes_per_sample(audio_format_t format)
 {
     size_t size = 0;
-- 
2.7.4

